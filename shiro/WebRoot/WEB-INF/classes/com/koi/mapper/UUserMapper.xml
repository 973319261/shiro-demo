<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.koi.mapper.UUserMapper">
<cache/>
	<resultMap id="BaseResultMap" type="com.koi.pojo.UUser">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="pswd" property="pswd" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="last_login_time" property="lastLoginTime"
			jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="BIGINT" />
		<result column="salt" property="salt" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, nickname, email, pswd, create_time, last_login_time, status, salt
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.koi.pojo.UUserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from u_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from u_user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from u_user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.koi.pojo.UUserExample">
		delete from u_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.koi.pojo.UUser">
		insert into u_user (id, nickname, email,
		pswd, create_time, last_login_time,
		status, salt)
		values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{pswd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{lastLoginTime,jdbcType=TIMESTAMP},
		#{status,jdbcType=BIGINT}, #{salt,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.koi.pojo.UUser">
		insert into u_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="pswd != null">
				pswd,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="salt != null">
				salt,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				#{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=BIGINT},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.koi.pojo.UUserExample"
		resultType="java.lang.Integer">
		select count(*) from u_user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update u_user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.nickname != null">
				nickname = #{record.nickname,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.pswd != null">
				pswd = #{record.pswd,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.lastLoginTime != null">
				last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=BIGINT},
			</if>
			<if test="record.salt != null">
				salt = #{record.salt,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update u_user
		set id = #{record.id,jdbcType=BIGINT},
		nickname = #{record.nickname,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		pswd = #{record.pswd,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
		status = #{record.status,jdbcType=BIGINT},
		salt = #{record.salt,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.koi.pojo.UUser">
		update u_user
		<set>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="pswd != null">
				pswd = #{pswd,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=BIGINT},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.koi.pojo.UUser">
		update u_user
		set nickname = #{nickname,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		pswd = #{pswd,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=BIGINT},
		salt = #{salt,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 批量删除 -->
	<delete id="deleteUserByUserId">
		DELETE u_user.*,u_user_role.* FROM u_user LEFT JOIN u_user_role ON
		u_user.id=u_user_role.uid WHERE u_user.id IN
		<foreach collection="array" open="(" separator="," close=")" item="uId">
		   #{uId}
		</foreach>
	</delete>
</mapper>