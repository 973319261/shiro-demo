<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.3.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">
	<!--基于mapper代理开发  扫描sql映射文件  根据接口自动生成代理对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.koi.mapper"/>
	</bean>
	
	<!-- 配置数据源 --> 
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 配置mybatis工厂，创建SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis核心配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	<!-- 配置事务管理器(spring中的jdbc事务管理器) -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 基于注解方式配置事务，为了配合自定义注解 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 编写通知：对事务进行增强（通知），需要编写对切入点和具体执行事务的细节（隔离级别、传播行为等） -->
	<!-- 基于xml方式配置事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<tx:method name="update*" rollback-for="CustomException" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="save*" rollback-for="CustomException" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="insert*" rollback-for="CustomException" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="add*" rollback-for="CustomException" isolation="DEFAULT" propagation="REQUIRED" />
			<tx:method name="delete*" rollback-for="CustomException" isolation="DEFAULT" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 编写aop,让spring自动对目标生成代理 -->
	<aop:config>
        <!-- 切入点 -->
		<aop:pointcut expression="execution(* com.koi.service.impl.*.*(..))"
			id="myPointcut" />	
		<!-- 配置通知器：将切入点与通知整合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="myPointcut" />
	</aop:config>
</beans>